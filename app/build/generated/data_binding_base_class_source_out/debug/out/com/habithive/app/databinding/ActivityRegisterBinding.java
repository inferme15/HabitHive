// Generated by view binder compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.habithive.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView buttonLogin;

  @NonNull
  public final Button buttonRegister;

  @NonNull
  public final TextInputEditText editTextConfirmPassword;

  @NonNull
  public final TextInputEditText editTextEmail;

  @NonNull
  public final TextInputEditText editTextName;

  @NonNull
  public final TextInputEditText editTextPassword;

  @NonNull
  public final TextInputLayout inputLayoutConfirmPassword;

  @NonNull
  public final TextInputLayout inputLayoutEmail;

  @NonNull
  public final TextInputLayout inputLayoutName;

  @NonNull
  public final TextInputLayout inputLayoutPassword;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textTitle;

  private ActivityRegisterBinding(@NonNull ScrollView rootView, @NonNull TextView buttonLogin,
      @NonNull Button buttonRegister, @NonNull TextInputEditText editTextConfirmPassword,
      @NonNull TextInputEditText editTextEmail, @NonNull TextInputEditText editTextName,
      @NonNull TextInputEditText editTextPassword,
      @NonNull TextInputLayout inputLayoutConfirmPassword,
      @NonNull TextInputLayout inputLayoutEmail, @NonNull TextInputLayout inputLayoutName,
      @NonNull TextInputLayout inputLayoutPassword, @NonNull ProgressBar progressBar,
      @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.buttonLogin = buttonLogin;
    this.buttonRegister = buttonRegister;
    this.editTextConfirmPassword = editTextConfirmPassword;
    this.editTextEmail = editTextEmail;
    this.editTextName = editTextName;
    this.editTextPassword = editTextPassword;
    this.inputLayoutConfirmPassword = inputLayoutConfirmPassword;
    this.inputLayoutEmail = inputLayoutEmail;
    this.inputLayoutName = inputLayoutName;
    this.inputLayoutPassword = inputLayoutPassword;
    this.progressBar = progressBar;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonLogin;
      TextView buttonLogin = ViewBindings.findChildViewById(rootView, id);
      if (buttonLogin == null) {
        break missingId;
      }

      id = R.id.buttonRegister;
      Button buttonRegister = ViewBindings.findChildViewById(rootView, id);
      if (buttonRegister == null) {
        break missingId;
      }

      id = R.id.editTextConfirmPassword;
      TextInputEditText editTextConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextConfirmPassword == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      TextInputEditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextName;
      TextInputEditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      TextInputEditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.inputLayoutConfirmPassword;
      TextInputLayout inputLayoutConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutConfirmPassword == null) {
        break missingId;
      }

      id = R.id.inputLayoutEmail;
      TextInputLayout inputLayoutEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutEmail == null) {
        break missingId;
      }

      id = R.id.inputLayoutName;
      TextInputLayout inputLayoutName = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutName == null) {
        break missingId;
      }

      id = R.id.inputLayoutPassword;
      TextInputLayout inputLayoutPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutPassword == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ScrollView) rootView, buttonLogin, buttonRegister,
          editTextConfirmPassword, editTextEmail, editTextName, editTextPassword,
          inputLayoutConfirmPassword, inputLayoutEmail, inputLayoutName, inputLayoutPassword,
          progressBar, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
