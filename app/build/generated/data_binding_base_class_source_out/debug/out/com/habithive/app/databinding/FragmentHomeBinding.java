// Generated by data binding compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.github.mikephil.charting.charts.BarChart;
import com.google.android.material.card.MaterialCardView;
import com.habithive.app.R;
import com.habithive.app.ui.home.HomeViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentHomeBinding extends ViewDataBinding {
  @NonNull
  public final MaterialCardView cardChart;

  @NonNull
  public final MaterialCardView cardHabits;

  @NonNull
  public final MaterialCardView cardStats;

  @NonNull
  public final BarChart chartProgress;

  @NonNull
  public final ProgressBar progressCompletion;

  @NonNull
  public final WidgetMotivationalQuoteBinding quoteWidget;

  @NonNull
  public final TextView textCaloriesBurned;

  @NonNull
  public final TextView textCaloriesBurnedLabel;

  @NonNull
  public final TextView textCompletedHabits;

  @NonNull
  public final TextView textCompletedLabel;

  @NonNull
  public final TextView textCompletionRate;

  @NonNull
  public final TextView textCompletionRateLabel;

  @NonNull
  public final TextView textDailyScore;

  @NonNull
  public final TextView textDailyScoreLabel;

  @NonNull
  public final TextView textHabitsCount;

  @NonNull
  public final TextView textHabitsLabel;

  @NonNull
  public final TextView textProgressTitle;

  @NonNull
  public final TextView textStatsTitle;

  @NonNull
  public final TextView textTotalPoints;

  @NonNull
  public final TextView textTotalPointsLabel;

  @NonNull
  public final TextView textWeeklyScore;

  @NonNull
  public final TextView textWeeklyScoreLabel;

  @NonNull
  public final TextView textWelcome;

  @Bindable
  protected HomeViewModel mViewModel;

  protected FragmentHomeBinding(Object _bindingComponent, View _root, int _localFieldCount,
      MaterialCardView cardChart, MaterialCardView cardHabits, MaterialCardView cardStats,
      BarChart chartProgress, ProgressBar progressCompletion,
      WidgetMotivationalQuoteBinding quoteWidget, TextView textCaloriesBurned,
      TextView textCaloriesBurnedLabel, TextView textCompletedHabits, TextView textCompletedLabel,
      TextView textCompletionRate, TextView textCompletionRateLabel, TextView textDailyScore,
      TextView textDailyScoreLabel, TextView textHabitsCount, TextView textHabitsLabel,
      TextView textProgressTitle, TextView textStatsTitle, TextView textTotalPoints,
      TextView textTotalPointsLabel, TextView textWeeklyScore, TextView textWeeklyScoreLabel,
      TextView textWelcome) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardChart = cardChart;
    this.cardHabits = cardHabits;
    this.cardStats = cardStats;
    this.chartProgress = chartProgress;
    this.progressCompletion = progressCompletion;
    this.quoteWidget = quoteWidget;
    this.textCaloriesBurned = textCaloriesBurned;
    this.textCaloriesBurnedLabel = textCaloriesBurnedLabel;
    this.textCompletedHabits = textCompletedHabits;
    this.textCompletedLabel = textCompletedLabel;
    this.textCompletionRate = textCompletionRate;
    this.textCompletionRateLabel = textCompletionRateLabel;
    this.textDailyScore = textDailyScore;
    this.textDailyScoreLabel = textDailyScoreLabel;
    this.textHabitsCount = textHabitsCount;
    this.textHabitsLabel = textHabitsLabel;
    this.textProgressTitle = textProgressTitle;
    this.textStatsTitle = textStatsTitle;
    this.textTotalPoints = textTotalPoints;
    this.textTotalPointsLabel = textTotalPointsLabel;
    this.textWeeklyScore = textWeeklyScore;
    this.textWeeklyScoreLabel = textWeeklyScoreLabel;
    this.textWelcome = textWelcome;
  }

  public abstract void setViewModel(@Nullable HomeViewModel viewModel);

  @Nullable
  public HomeViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_home, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentHomeBinding>inflateInternal(inflater, R.layout.fragment_home, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_home, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentHomeBinding>inflateInternal(inflater, R.layout.fragment_home, null, false, component);
  }

  public static FragmentHomeBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentHomeBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentHomeBinding)bind(component, view, R.layout.fragment_home);
  }
}
