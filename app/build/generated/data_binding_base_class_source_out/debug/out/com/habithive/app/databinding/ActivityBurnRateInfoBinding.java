// Generated by view binder compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.habithive.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBurnRateInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView recyclerViewBurnRates;

  @NonNull
  public final TextView textCalorieFormula;

  @NonNull
  public final TextView textPointsFormula;

  @NonNull
  public final TextView textTableTitle;

  @NonNull
  public final TextView textTitle;

  private ActivityBurnRateInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView recyclerViewBurnRates, @NonNull TextView textCalorieFormula,
      @NonNull TextView textPointsFormula, @NonNull TextView textTableTitle,
      @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.recyclerViewBurnRates = recyclerViewBurnRates;
    this.textCalorieFormula = textCalorieFormula;
    this.textPointsFormula = textPointsFormula;
    this.textTableTitle = textTableTitle;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBurnRateInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBurnRateInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_burn_rate_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBurnRateInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recyclerViewBurnRates;
      RecyclerView recyclerViewBurnRates = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewBurnRates == null) {
        break missingId;
      }

      id = R.id.textCalorieFormula;
      TextView textCalorieFormula = ViewBindings.findChildViewById(rootView, id);
      if (textCalorieFormula == null) {
        break missingId;
      }

      id = R.id.textPointsFormula;
      TextView textPointsFormula = ViewBindings.findChildViewById(rootView, id);
      if (textPointsFormula == null) {
        break missingId;
      }

      id = R.id.textTableTitle;
      TextView textTableTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTableTitle == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new ActivityBurnRateInfoBinding((ConstraintLayout) rootView, recyclerViewBurnRates,
          textCalorieFormula, textPointsFormula, textTableTitle, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
