// Generated by view binder compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.habithive.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLeaderboardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView imageRank;

  @NonNull
  public final TextView textName;

  @NonNull
  public final TextView textRank;

  @NonNull
  public final TextView textScore;

  private ItemLeaderboardBinding(@NonNull CardView rootView, @NonNull Guideline guideline,
      @NonNull ImageView imageRank, @NonNull TextView textName, @NonNull TextView textRank,
      @NonNull TextView textScore) {
    this.rootView = rootView;
    this.guideline = guideline;
    this.imageRank = imageRank;
    this.textName = textName;
    this.textRank = textRank;
    this.textScore = textScore;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLeaderboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLeaderboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_leaderboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLeaderboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.imageRank;
      ImageView imageRank = ViewBindings.findChildViewById(rootView, id);
      if (imageRank == null) {
        break missingId;
      }

      id = R.id.textName;
      TextView textName = ViewBindings.findChildViewById(rootView, id);
      if (textName == null) {
        break missingId;
      }

      id = R.id.textRank;
      TextView textRank = ViewBindings.findChildViewById(rootView, id);
      if (textRank == null) {
        break missingId;
      }

      id = R.id.textScore;
      TextView textScore = ViewBindings.findChildViewById(rootView, id);
      if (textScore == null) {
        break missingId;
      }

      return new ItemLeaderboardBinding((CardView) rootView, guideline, imageRank, textName,
          textRank, textScore);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
