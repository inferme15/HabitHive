// Generated by view binder compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.habithive.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddHabitBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final TextInputEditText editTextCalories;

  @NonNull
  public final TextInputEditText editTextDescription;

  @NonNull
  public final TextInputEditText editTextPoints;

  @NonNull
  public final TextInputEditText editTextTitle;

  @NonNull
  public final TextInputLayout inputLayoutCalories;

  @NonNull
  public final TextInputLayout inputLayoutDescription;

  @NonNull
  public final TextInputLayout inputLayoutPoints;

  @NonNull
  public final TextInputLayout inputLayoutTitle;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Spinner spinnerFrequency;

  @NonNull
  public final Spinner spinnerType;

  @NonNull
  public final TextView textFrequencyLabel;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final TextView textTypeLabel;

  private ActivityAddHabitBinding(@NonNull ScrollView rootView, @NonNull Button buttonSave,
      @NonNull TextInputEditText editTextCalories, @NonNull TextInputEditText editTextDescription,
      @NonNull TextInputEditText editTextPoints, @NonNull TextInputEditText editTextTitle,
      @NonNull TextInputLayout inputLayoutCalories, @NonNull TextInputLayout inputLayoutDescription,
      @NonNull TextInputLayout inputLayoutPoints, @NonNull TextInputLayout inputLayoutTitle,
      @NonNull ProgressBar progressBar, @NonNull Spinner spinnerFrequency,
      @NonNull Spinner spinnerType, @NonNull TextView textFrequencyLabel,
      @NonNull TextView textTitle, @NonNull TextView textTypeLabel) {
    this.rootView = rootView;
    this.buttonSave = buttonSave;
    this.editTextCalories = editTextCalories;
    this.editTextDescription = editTextDescription;
    this.editTextPoints = editTextPoints;
    this.editTextTitle = editTextTitle;
    this.inputLayoutCalories = inputLayoutCalories;
    this.inputLayoutDescription = inputLayoutDescription;
    this.inputLayoutPoints = inputLayoutPoints;
    this.inputLayoutTitle = inputLayoutTitle;
    this.progressBar = progressBar;
    this.spinnerFrequency = spinnerFrequency;
    this.spinnerType = spinnerType;
    this.textFrequencyLabel = textFrequencyLabel;
    this.textTitle = textTitle;
    this.textTypeLabel = textTypeLabel;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddHabitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_habit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddHabitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.editTextCalories;
      TextInputEditText editTextCalories = ViewBindings.findChildViewById(rootView, id);
      if (editTextCalories == null) {
        break missingId;
      }

      id = R.id.editTextDescription;
      TextInputEditText editTextDescription = ViewBindings.findChildViewById(rootView, id);
      if (editTextDescription == null) {
        break missingId;
      }

      id = R.id.editTextPoints;
      TextInputEditText editTextPoints = ViewBindings.findChildViewById(rootView, id);
      if (editTextPoints == null) {
        break missingId;
      }

      id = R.id.editTextTitle;
      TextInputEditText editTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.inputLayoutCalories;
      TextInputLayout inputLayoutCalories = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutCalories == null) {
        break missingId;
      }

      id = R.id.inputLayoutDescription;
      TextInputLayout inputLayoutDescription = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutDescription == null) {
        break missingId;
      }

      id = R.id.inputLayoutPoints;
      TextInputLayout inputLayoutPoints = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutPoints == null) {
        break missingId;
      }

      id = R.id.inputLayoutTitle;
      TextInputLayout inputLayoutTitle = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutTitle == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.spinnerFrequency;
      Spinner spinnerFrequency = ViewBindings.findChildViewById(rootView, id);
      if (spinnerFrequency == null) {
        break missingId;
      }

      id = R.id.spinnerType;
      Spinner spinnerType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerType == null) {
        break missingId;
      }

      id = R.id.textFrequencyLabel;
      TextView textFrequencyLabel = ViewBindings.findChildViewById(rootView, id);
      if (textFrequencyLabel == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.textTypeLabel;
      TextView textTypeLabel = ViewBindings.findChildViewById(rootView, id);
      if (textTypeLabel == null) {
        break missingId;
      }

      return new ActivityAddHabitBinding((ScrollView) rootView, buttonSave, editTextCalories,
          editTextDescription, editTextPoints, editTextTitle, inputLayoutCalories,
          inputLayoutDescription, inputLayoutPoints, inputLayoutTitle, progressBar,
          spinnerFrequency, spinnerType, textFrequencyLabel, textTitle, textTypeLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
