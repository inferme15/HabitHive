// Generated by view binder compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.habithive.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHabitBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final CheckBox checkboxCompleted;

  @NonNull
  public final TextView textDescription;

  @NonNull
  public final TextView textFrequency;

  @NonNull
  public final TextView textPoints;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final TextView textType;

  private ItemHabitBinding(@NonNull MaterialCardView rootView, @NonNull CheckBox checkboxCompleted,
      @NonNull TextView textDescription, @NonNull TextView textFrequency,
      @NonNull TextView textPoints, @NonNull TextView textTitle, @NonNull TextView textType) {
    this.rootView = rootView;
    this.checkboxCompleted = checkboxCompleted;
    this.textDescription = textDescription;
    this.textFrequency = textFrequency;
    this.textPoints = textPoints;
    this.textTitle = textTitle;
    this.textType = textType;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHabitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHabitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_habit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHabitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkboxCompleted;
      CheckBox checkboxCompleted = ViewBindings.findChildViewById(rootView, id);
      if (checkboxCompleted == null) {
        break missingId;
      }

      id = R.id.textDescription;
      TextView textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.textFrequency;
      TextView textFrequency = ViewBindings.findChildViewById(rootView, id);
      if (textFrequency == null) {
        break missingId;
      }

      id = R.id.textPoints;
      TextView textPoints = ViewBindings.findChildViewById(rootView, id);
      if (textPoints == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.textType;
      TextView textType = ViewBindings.findChildViewById(rootView, id);
      if (textType == null) {
        break missingId;
      }

      return new ItemHabitBinding((MaterialCardView) rootView, checkboxCompleted, textDescription,
          textFrequency, textPoints, textTitle, textType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
