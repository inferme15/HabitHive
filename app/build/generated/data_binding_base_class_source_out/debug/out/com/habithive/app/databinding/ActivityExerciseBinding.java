// Generated by view binder compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.habithive.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExerciseBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonBurnRateInfo;

  @NonNull
  public final Button buttonCalculate;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final Button buttonViewHistory;

  @NonNull
  public final EditText editTextDuration;

  @NonNull
  public final EditText editTextNotes;

  @NonNull
  public final Spinner spinnerExerciseType;

  @NonNull
  public final TextView textBmiInfo;

  @NonNull
  public final TextView textBmiStatus;

  @NonNull
  public final TextView textCaloriesValue;

  @NonNull
  public final TextView textPointsValue;

  @NonNull
  public final TextView textViewTitle;

  private ActivityExerciseBinding(@NonNull ScrollView rootView, @NonNull Button buttonBurnRateInfo,
      @NonNull Button buttonCalculate, @NonNull Button buttonSave,
      @NonNull Button buttonViewHistory, @NonNull EditText editTextDuration,
      @NonNull EditText editTextNotes, @NonNull Spinner spinnerExerciseType,
      @NonNull TextView textBmiInfo, @NonNull TextView textBmiStatus,
      @NonNull TextView textCaloriesValue, @NonNull TextView textPointsValue,
      @NonNull TextView textViewTitle) {
    this.rootView = rootView;
    this.buttonBurnRateInfo = buttonBurnRateInfo;
    this.buttonCalculate = buttonCalculate;
    this.buttonSave = buttonSave;
    this.buttonViewHistory = buttonViewHistory;
    this.editTextDuration = editTextDuration;
    this.editTextNotes = editTextNotes;
    this.spinnerExerciseType = spinnerExerciseType;
    this.textBmiInfo = textBmiInfo;
    this.textBmiStatus = textBmiStatus;
    this.textCaloriesValue = textCaloriesValue;
    this.textPointsValue = textPointsValue;
    this.textViewTitle = textViewTitle;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonBurnRateInfo;
      Button buttonBurnRateInfo = ViewBindings.findChildViewById(rootView, id);
      if (buttonBurnRateInfo == null) {
        break missingId;
      }

      id = R.id.buttonCalculate;
      Button buttonCalculate = ViewBindings.findChildViewById(rootView, id);
      if (buttonCalculate == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.buttonViewHistory;
      Button buttonViewHistory = ViewBindings.findChildViewById(rootView, id);
      if (buttonViewHistory == null) {
        break missingId;
      }

      id = R.id.editTextDuration;
      EditText editTextDuration = ViewBindings.findChildViewById(rootView, id);
      if (editTextDuration == null) {
        break missingId;
      }

      id = R.id.editTextNotes;
      EditText editTextNotes = ViewBindings.findChildViewById(rootView, id);
      if (editTextNotes == null) {
        break missingId;
      }

      id = R.id.spinnerExerciseType;
      Spinner spinnerExerciseType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerExerciseType == null) {
        break missingId;
      }

      id = R.id.textBmiInfo;
      TextView textBmiInfo = ViewBindings.findChildViewById(rootView, id);
      if (textBmiInfo == null) {
        break missingId;
      }

      id = R.id.textBmiStatus;
      TextView textBmiStatus = ViewBindings.findChildViewById(rootView, id);
      if (textBmiStatus == null) {
        break missingId;
      }

      id = R.id.textCaloriesValue;
      TextView textCaloriesValue = ViewBindings.findChildViewById(rootView, id);
      if (textCaloriesValue == null) {
        break missingId;
      }

      id = R.id.textPointsValue;
      TextView textPointsValue = ViewBindings.findChildViewById(rootView, id);
      if (textPointsValue == null) {
        break missingId;
      }

      id = R.id.textViewTitle;
      TextView textViewTitle = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitle == null) {
        break missingId;
      }

      return new ActivityExerciseBinding((ScrollView) rootView, buttonBurnRateInfo, buttonCalculate,
          buttonSave, buttonViewHistory, editTextDuration, editTextNotes, spinnerExerciseType,
          textBmiInfo, textBmiStatus, textCaloriesValue, textPointsValue, textViewTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
