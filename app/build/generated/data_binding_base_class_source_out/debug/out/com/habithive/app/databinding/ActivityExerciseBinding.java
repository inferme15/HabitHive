// Generated by view binder compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.habithive.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityExerciseBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonCalculate;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final Button buttonViewHistory;

  @NonNull
  public final CardView cardCalculation;

  @NonNull
  public final TextInputEditText editTextDuration;

  @NonNull
  public final TextInputEditText editTextNotes;

  @NonNull
  public final TextInputLayout inputLayoutDuration;

  @NonNull
  public final TextInputLayout inputLayoutNotes;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Spinner spinnerExerciseType;

  @NonNull
  public final TextView textBurnRateLabel;

  @NonNull
  public final TextView textBurnRateValue;

  @NonNull
  public final TextView textCalorieFormula;

  @NonNull
  public final TextView textCaloriesLabel;

  @NonNull
  public final TextView textCaloriesValue;

  @NonNull
  public final TextView textPointsFormula;

  @NonNull
  public final TextView textPointsLabel;

  @NonNull
  public final TextView textPointsValue;

  @NonNull
  public final TextView textTitle;

  @NonNull
  public final TextView textTypeLabel;

  private ActivityExerciseBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonCalculate, @NonNull Button buttonSave,
      @NonNull Button buttonViewHistory, @NonNull CardView cardCalculation,
      @NonNull TextInputEditText editTextDuration, @NonNull TextInputEditText editTextNotes,
      @NonNull TextInputLayout inputLayoutDuration, @NonNull TextInputLayout inputLayoutNotes,
      @NonNull ProgressBar progressBar, @NonNull Spinner spinnerExerciseType,
      @NonNull TextView textBurnRateLabel, @NonNull TextView textBurnRateValue,
      @NonNull TextView textCalorieFormula, @NonNull TextView textCaloriesLabel,
      @NonNull TextView textCaloriesValue, @NonNull TextView textPointsFormula,
      @NonNull TextView textPointsLabel, @NonNull TextView textPointsValue,
      @NonNull TextView textTitle, @NonNull TextView textTypeLabel) {
    this.rootView = rootView;
    this.buttonCalculate = buttonCalculate;
    this.buttonSave = buttonSave;
    this.buttonViewHistory = buttonViewHistory;
    this.cardCalculation = cardCalculation;
    this.editTextDuration = editTextDuration;
    this.editTextNotes = editTextNotes;
    this.inputLayoutDuration = inputLayoutDuration;
    this.inputLayoutNotes = inputLayoutNotes;
    this.progressBar = progressBar;
    this.spinnerExerciseType = spinnerExerciseType;
    this.textBurnRateLabel = textBurnRateLabel;
    this.textBurnRateValue = textBurnRateValue;
    this.textCalorieFormula = textCalorieFormula;
    this.textCaloriesLabel = textCaloriesLabel;
    this.textCaloriesValue = textCaloriesValue;
    this.textPointsFormula = textPointsFormula;
    this.textPointsLabel = textPointsLabel;
    this.textPointsValue = textPointsValue;
    this.textTitle = textTitle;
    this.textTypeLabel = textTypeLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityExerciseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityExerciseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_exercise, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityExerciseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCalculate;
      Button buttonCalculate = ViewBindings.findChildViewById(rootView, id);
      if (buttonCalculate == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.buttonViewHistory;
      Button buttonViewHistory = ViewBindings.findChildViewById(rootView, id);
      if (buttonViewHistory == null) {
        break missingId;
      }

      id = R.id.cardCalculation;
      CardView cardCalculation = ViewBindings.findChildViewById(rootView, id);
      if (cardCalculation == null) {
        break missingId;
      }

      id = R.id.editTextDuration;
      TextInputEditText editTextDuration = ViewBindings.findChildViewById(rootView, id);
      if (editTextDuration == null) {
        break missingId;
      }

      id = R.id.editTextNotes;
      TextInputEditText editTextNotes = ViewBindings.findChildViewById(rootView, id);
      if (editTextNotes == null) {
        break missingId;
      }

      id = R.id.inputLayoutDuration;
      TextInputLayout inputLayoutDuration = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutDuration == null) {
        break missingId;
      }

      id = R.id.inputLayoutNotes;
      TextInputLayout inputLayoutNotes = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutNotes == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.spinnerExerciseType;
      Spinner spinnerExerciseType = ViewBindings.findChildViewById(rootView, id);
      if (spinnerExerciseType == null) {
        break missingId;
      }

      id = R.id.textBurnRateLabel;
      TextView textBurnRateLabel = ViewBindings.findChildViewById(rootView, id);
      if (textBurnRateLabel == null) {
        break missingId;
      }

      id = R.id.textBurnRateValue;
      TextView textBurnRateValue = ViewBindings.findChildViewById(rootView, id);
      if (textBurnRateValue == null) {
        break missingId;
      }

      id = R.id.textCalorieFormula;
      TextView textCalorieFormula = ViewBindings.findChildViewById(rootView, id);
      if (textCalorieFormula == null) {
        break missingId;
      }

      id = R.id.textCaloriesLabel;
      TextView textCaloriesLabel = ViewBindings.findChildViewById(rootView, id);
      if (textCaloriesLabel == null) {
        break missingId;
      }

      id = R.id.textCaloriesValue;
      TextView textCaloriesValue = ViewBindings.findChildViewById(rootView, id);
      if (textCaloriesValue == null) {
        break missingId;
      }

      id = R.id.textPointsFormula;
      TextView textPointsFormula = ViewBindings.findChildViewById(rootView, id);
      if (textPointsFormula == null) {
        break missingId;
      }

      id = R.id.textPointsLabel;
      TextView textPointsLabel = ViewBindings.findChildViewById(rootView, id);
      if (textPointsLabel == null) {
        break missingId;
      }

      id = R.id.textPointsValue;
      TextView textPointsValue = ViewBindings.findChildViewById(rootView, id);
      if (textPointsValue == null) {
        break missingId;
      }

      id = R.id.textTitle;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      id = R.id.textTypeLabel;
      TextView textTypeLabel = ViewBindings.findChildViewById(rootView, id);
      if (textTypeLabel == null) {
        break missingId;
      }

      return new ActivityExerciseBinding((ConstraintLayout) rootView, buttonCalculate, buttonSave,
          buttonViewHistory, cardCalculation, editTextDuration, editTextNotes, inputLayoutDuration,
          inputLayoutNotes, progressBar, spinnerExerciseType, textBurnRateLabel, textBurnRateValue,
          textCalorieFormula, textCaloriesLabel, textCaloriesValue, textPointsFormula,
          textPointsLabel, textPointsValue, textTitle, textTypeLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
