// Generated by view binder compiler. Do not edit!
package com.habithive.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.habithive.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBurnRateInfoBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView textBurnRate;

  @NonNull
  public final TextView textExerciseType;

  @NonNull
  public final TextView textIntensity;

  @NonNull
  public final TextView textIntensityLabel;

  private ItemBurnRateInfoBinding(@NonNull CardView rootView, @NonNull TextView textBurnRate,
      @NonNull TextView textExerciseType, @NonNull TextView textIntensity,
      @NonNull TextView textIntensityLabel) {
    this.rootView = rootView;
    this.textBurnRate = textBurnRate;
    this.textExerciseType = textExerciseType;
    this.textIntensity = textIntensity;
    this.textIntensityLabel = textIntensityLabel;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBurnRateInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBurnRateInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_burn_rate_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBurnRateInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textBurnRate;
      TextView textBurnRate = ViewBindings.findChildViewById(rootView, id);
      if (textBurnRate == null) {
        break missingId;
      }

      id = R.id.textExerciseType;
      TextView textExerciseType = ViewBindings.findChildViewById(rootView, id);
      if (textExerciseType == null) {
        break missingId;
      }

      id = R.id.textIntensity;
      TextView textIntensity = ViewBindings.findChildViewById(rootView, id);
      if (textIntensity == null) {
        break missingId;
      }

      id = R.id.textIntensityLabel;
      TextView textIntensityLabel = ViewBindings.findChildViewById(rootView, id);
      if (textIntensityLabel == null) {
        break missingId;
      }

      return new ItemBurnRateInfoBinding((CardView) rootView, textBurnRate, textExerciseType,
          textIntensity, textIntensityLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
